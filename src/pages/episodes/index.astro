---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const episodes = await getCollection('episodes');
const sortedEpisodes = episodes.sort((a, b) => b.data.episodeNumber - a.data.episodeNumber);

// Get unique tags
const allTags = [...new Set(sortedEpisodes.flatMap(episode => episode.data.tags))].sort();

// Get selected tag from URL query parameter
const selectedTag = Astro.url.searchParams.get('tag');

// Filter episodes by selected tag
const filteredEpisodes = selectedTag 
	? sortedEpisodes.filter(episode => episode.data.tags.includes(selectedTag))
	: sortedEpisodes;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`Episodes | ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main class="bg-gray-50 min-h-screen">
			<div class="container max-w-6xl mx-auto px-4 py-8">
				<div class="mb-8">
					<h1 class="text-3xl font-bold mb-6">
						{selectedTag ? `Episodes tagged with "${selectedTag}"` : 'All Episodes'}
					</h1>

					<div class="flex flex-wrap gap-2">
						<a 
							href="/episodes" 
							class={`btn ${!selectedTag ? 'btn-primary' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`}
						>
							All
						</a>
						{allTags.map(tag => (
							<a
								href={`/episodes?tag=${tag}`}
								class={`btn ${selectedTag === tag ? 'btn-primary' : 'bg-gray-100 text-gray-700 hover:bg-gray-200'}`}
							>
								{tag}
							</a>
						))}
					</div>
				</div>

				<div class="grid gap-8">
					{filteredEpisodes.map((episode) => (
						<article class="flex flex-col md:flex-row bg-white rounded-lg overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300">
							<div class="md:w-64 shrink-0">
								<div class="aspect-video overflow-hidden">
									<img
										src={`https://img.youtube.com/vi/${episode.data.youtubeId}/hqdefault.jpg`}
										alt={episode.data.title}
										class="w-full h-full object-cover"
									/>
								</div>
							</div>
							<div class="flex-1 p-6">
								<div class="text-lime font-semibold text-sm mb-2">EPISODE #{episode.data.episodeNumber}</div>
								<h3 class="text-2xl font-bold text-gray-900 mb-2 hover:text-lime transition-colors">
									<a href={`/episodes/${episode.slug}/`}>
										{episode.data.title}
									</a>
								</h3>
								<p class="text-gray-500 text-sm mb-3">
									Recorded on: <FormattedDate date={episode.data.pubDate} />
								</p>
								<p class="text-gray-700 mb-4 line-clamp-2">
									{episode.data.description}
								</p>
								<div class="flex flex-wrap gap-2">
									{episode.data.tags.map((tag) => (
										<a 
											href={`/episodes?tag=${tag}`}
											class="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm hover:bg-gray-200 transition-colors"
										>
											{tag}
										</a>
									))}
								</div>
							</div>
						</article>
					))}
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>