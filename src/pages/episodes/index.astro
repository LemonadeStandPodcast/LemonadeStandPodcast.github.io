---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';

const episodes = await getCollection('episodes');
const sortedEpisodes = episodes.sort((a, b) => b.data.episodeNumber - a.data.episodeNumber);

// Get unique tags
const allTags = [...new Set(sortedEpisodes.flatMap(episode => episode.data.tags))].sort();

// Get selected tag from URL query parameter
const selectedTag = Astro.url.searchParams.get('tag');

// Filter episodes by selected tag
const filteredEpisodes = selectedTag 
	? sortedEpisodes.filter(episode => episode.data.tags.includes(selectedTag))
	: sortedEpisodes;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`Episodes | ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
	</head>
	<body class="min-h-screen bg-white dark:bg-gray-800">
		<Header />
		<main class="min-h-screen">
			<div class="container max-w-6xl mx-auto px-4 py-8">
				<div class="mb-8">
					<h1 class="text-3xl font-bold text-gray-900 dark:text-gray-50 mb-6">
						{selectedTag ? `Episodes tagged with "${selectedTag}"` : 'All Episodes'}
					</h1>

					<div class="flex flex-wrap gap-2">
						<a 
							href="/episodes" 
							class={`btn ${!selectedTag ? 'btn-primary' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600'}`}
						>
							All
						</a>
						{allTags.map(tag => (
							<a
								href={`/episodes?tag=${tag}`}
								class={`btn ${selectedTag === tag ? 'btn-primary' : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600'}`}
							>
								{tag}
							</a>
						))}
					</div>
				</div>

				<div class="grid gap-8">
					{filteredEpisodes.map((episode) => (
						<article class="flex flex-col md:flex-row bg-white dark:bg-gray-700/50 rounded-lg overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300">
							<div class="md:w-1/3 shrink-0 flex items-stretch">
								<img
									src={`https://img.youtube.com/vi/${episode.data.youtubeId}/maxresdefault.jpg`}
									alt={episode.data.title}
									class="w-full h-full object-cover"
								/>
							</div>
							<div class="flex-1 p-4 md:p-6 md:pl-8">
								<h3 class="text-xl font-bold text-white dark:text-white mb-2">
									<a href={`/episodes/${episode.slug}/`} class="text-white hover:text-lime-300 dark:hover:text-lime-300">
										#{episode.data.episodeNumber} {episode.data.title}
									</a>
								</h3>
								<p class="text-gray-500 dark:text-gray-300 text-sm mb-3">
									Recorded on: <FormattedDate date={episode.data.pubDate} />
								</p>
								<p class="text-gray-700 dark:text-gray-200 mb-4">
									{episode.data.description}
								</p>
								<div class="flex flex-wrap gap-2">
									{episode.data.tags.map((tag) => (
										<a 
											href={`/episodes?tag=${tag}`}
											class="bg-gray-100 dark:bg-gray-600 text-gray-700 dark:text-gray-200 px-3 py-1 rounded-full text-sm hover:bg-gray-200 dark:hover:bg-gray-500 transition-colors"
										>
											{tag}
										</a>
									))}
								</div>
							</div>
						</article>
					))}
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html>