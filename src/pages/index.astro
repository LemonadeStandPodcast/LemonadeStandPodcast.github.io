---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const allEpisodes = await getCollection('episodes');
const sortedEpisodes = allEpisodes.sort((a, b) => b.data.episodeNumber - a.data.episodeNumber);
const latestEpisode = sortedEpisodes[0];
const recentEpisodes = sortedEpisodes.slice(1, 4);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="min-h-screen bg-white dark:bg-gray-800">
		<Header />
		
		<main class="min-h-screen">
			{latestEpisode && (
				<section class="border-b border-gray-200 dark:border-gray-700">
					<div class="container max-w-6xl mx-auto px-4 py-8">
						<div class="text-lime dark:text-lime-400 text-xl font-bold mb-4">LATEST EPISODE</div>
						<div class="w-full aspect-video mb-6">
							<iframe
								src={`https://www.youtube.com/embed/${latestEpisode.data.youtubeId}`}
								title={latestEpisode.data.title}
								class="w-full h-full"
								frameborder="0"
								allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
								allowfullscreen
							/>
						</div>
						<div>
							<div class="flex justify-between items-start mb-4">
								<h1 class="text-4xl font-bold text-gray-900 dark:text-gray-50">
									<a href={`/episodes/${latestEpisode.slug}/`} class="text-gray-900 dark:text-gray-50 hover:text-lime dark:hover:text-lime-400">
										#{latestEpisode.data.episodeNumber} {latestEpisode.data.title}
									</a>
								</h1>
								<p class="text-lime-600 dark:text-lime-400 font-medium whitespace-nowrap ml-4">
									<FormattedDate date={latestEpisode.data.pubDate} />
								</p>
							</div>
							<p class="text-lg text-gray-700 dark:text-gray-300 mb-6">{latestEpisode.data.description}</p>
							<div class="flex flex-wrap gap-2 mb-6">
								{latestEpisode.data.tags.map((tag) => (
									<a
										href={`/episodes?tag=${tag}`}
										class="bg-lime-100 dark:bg-lime-900/30 text-lime-800 dark:text-lime-300 px-3 py-1 rounded-full text-sm font-medium hover:bg-lime-200 dark:hover:bg-lime-800/50 transition-colors flex items-center gap-1"
									>
										<span class="inline-block w-2 h-2 rounded-full bg-lime-500 dark:bg-lime-400"></span>
										{tag}
									</a>
								))}
							</div>
							<a
								href={`/episodes/${latestEpisode.slug}/`}
								class="inline-block bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 px-6 py-3 rounded-md font-medium hover:bg-lime hover:text-white dark:hover:bg-lime dark:hover:text-white transition-all duration-200"
							>
								Episode Details
							</a>
						</div>
					</div>
				</section>
			)}

			{recentEpisodes.length > 0 && (
				<section class="container max-w-6xl mx-auto px-4 py-12">
					<h2 class="text-2xl font-bold text-gray-900 dark:text-gray-50 mb-8">Previous Episodes</h2>
					<div class="grid gap-8">
						{recentEpisodes.map((episode) => (
							<article class="flex flex-row bg-white dark:bg-gray-700/50 rounded-lg overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300">
								<div class="w-1/3 shrink-0 flex items-stretch">
									<img
										src={`https://img.youtube.com/vi/${episode.data.youtubeId}/maxresdefault.jpg`}
										alt={episode.data.title}
										class="w-full h-full object-cover"
									/>
								</div>
								<div class="flex-1 p-4 md:p-6 md:pl-8">
									<div class="flex justify-between items-start mb-2">
										<h3 class="text-xl font-bold text-gray-900 dark:text-gray-50">
											<a href={`/episodes/${episode.slug}/`} class="text-gray-900 dark:text-gray-50 hover:text-lime-600 dark:hover:text-lime-300">
												#{episode.data.episodeNumber} {episode.data.title}
											</a>
										</h3>
										<p class="text-lime-600 dark:text-lime-400 font-medium whitespace-nowrap text-sm ml-4">
											<FormattedDate date={episode.data.pubDate} />
										</p>
									</div>
									<p class="text-gray-700 dark:text-gray-200 mb-4">
										{episode.data.description}
									</p>
									<div class="flex flex-wrap gap-2">
										{episode.data.tags.map((tag) => (
											<a 
												href={`/episodes?tag=${tag}`}
												class="bg-lime-100 dark:bg-lime-900/30 text-lime-800 dark:text-lime-300 px-3 py-1 rounded-full text-sm font-medium hover:bg-lime-200 dark:hover:bg-lime-800/50 transition-colors flex items-center gap-1"
											>
												<span class="inline-block w-2 h-2 rounded-full bg-lime-500 dark:bg-lime-400"></span>
												{tag}
											</a>
										))}
									</div>
								</div>
							</article>
						))}
					</div>
					
					<div class="mt-12 text-center">
						<a 
							href="/episodes" 
							class="inline-block bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 px-8 py-3 rounded-md font-medium hover:bg-lime hover:text-white dark:hover:bg-lime dark:hover:text-white transition-all duration-200"
						>
							View All Episodes
						</a>
					</div>
				</section>
			)}
		</main>
		<Footer />
	</body>
</html>
